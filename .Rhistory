return (list(EVC=EVC, EVCP=EVCP))}
c(70, 100, 200, 1000)->rep
c(5, 7, 10)->k
Error<-c()
RepK<-c()
set.seed(80)
for(i in 1:length(rep))
{
for(j in 1:length(k))
{
res<-validacionCruzada(data=segundapregunta,repet=rep[i],K=k[j],y=1)$EVCP
pas<-paste(rep[i],k[j],sep="-")
RepK<-c(RepK,pas)
Error <-c(Error,res)
}
}
data.frame(RepK,Error)
validacionCruzada(segundaparte,70,5,4)$EVCP
validacionCruzada=function(data,repet,K,y)
{data=as.matrix(data)
n=dim(data)[1]
p=dim(data)[2]
EVC=rep(0, repet)
for (i in 1:repet)
{resid=matrix(0,1,K)
indices=sample(1:n,n,replace=F)
azar=data[indices,]
subm=floor(n/K)
for (j in 1:K)
{unid=((j-1)*subm+1):(j*subm)
if (j == K)
{unid=((j-1)*subm+1):n}
datap=azar[unid,]
datae=azar[-unid,]
ye=datae[,y]
xe=datae[,-y]
betas=lm(ye~xe)$coef
unos=rep(1,dim(datap)[1])
data1=cbind(unos,datap[,-y])
predict=data1%*%as.matrix(betas)
resid[j]=sum((predict-datap[,y])^2)}
EVC[i]=sum(resid)/n}
EVCP=mean(EVC)
return (list(EVC=EVC, EVCP=EVCP))}
c(70, 100, 200, 1000)->rep
c(5, 7, 10)->k
Error<-c()
RepK<-c()
set.seed(80)
for(i in 1:length(rep))
{
for(j in 1:length(k))
{
res<-validacionCruzada(data=segundaparte,repet=rep[i],K=k[j],y=1)$EVCP
pas<-paste(rep[i],k[j],sep="-")
RepK<-c(RepK,pas)
Error <-c(Error,res)
}
}
data.frame(RepK,Error)
validacionCruzada(segundaparte,70,5,4)$EVCP
fit.lrm2<-lrm(Situación.Económica~Narcotráfico+Actos.de.Violencia+Extensión.Total)
library(rms)
fit.lrm2<-lrm(Situación.Económica~Narcotráfico+Actos.de.Violencia+Extensión.Total)
attach(Pregunta2)
fit.lrm2<-lrm(Situación.Económica~Narcotráfico+Actos.de.Violencia+Extensión.Total)
head(Pregunta2)
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
fit.lrm2
anova(fit.lrm2)
fit.lrm2
anova(fit.lrm2)
library (MASS)
library (nnet)
fitS=multinom(Situación.Económica~Narcotráfico*Terrorismo*Actos.de.Violencia*Número.de.Terrenos*Extensión.Total)
fitS=multinom(Situación.Económica2~Narcotráfico*Terrorismo*Actos.de.Violencia*Número.de.Terrenos*Extensión.Total)
fitS=multinom(Situación.Económica.2~Narcotráfico*Terrorismo*Actos.de.Violencia*Número.de.Terrenos*Extensión.Total)
fitS
summary(fitS)
fit0=multinom(Situación.Económica∼1)
fit0=multinom(Situación.Económica.2∼1)
fit1=multinom(Situación.Económica.2~Narcotráfico*Terrorismo*Actos.de.Violencia*Número.de.Terrenos)
fit2=multinom(Situación.Económica.2~Narcotráfico*Terrorismo*Actos.de.Violencia)
fit3=multinom(Situación.Económica.2~Narcotráfico*Terrorismo*Actos.de.Violencia*Extensión.Total)
fit4=multinom(Situación.Económica.2~Terrorismo*Actos.de.Violencia*Número.de.Terrenos*Extensión.Total)
fit5=multinom(Situación.Económica.2~Narcotráfico*Actos.de.Violencia*Número.de.Terrenos*Extensión.Total)
deviance(fit0)-deviance(fitS)
deviance(fit1)-deviance(fitS)
deviance(fit2)-deviance(fitS)
deviance(fit3)-deviance(fitS)
deviance(fit4)-deviance(fitS)
deviance(fit5)-deviance(fitS)
deviance(fit5)-deviance(fit4)
summary(fit5)
predict(fit5,type="probs",newdata=data.frame(Situación.Económica="Ha empeorado",Narcotráfico="Sí"))
predict(fit5,type="probs",newdata=data.frame(Situación.Económica="Ha empeorado")
)
Pregunta3<-Pregunta2
detach(Pregunta2)
detach(Pregunta2)
attach(Pregunta3)
head(Pregunta2)
head(Pregunta3)
head(Pregunta3)
ModeloBinomial<-glm(Narcotráfico~Terrorismo+Actos.de.Violencia+Situación.Económica.2+Número.de.Terrenos+Extensión.Total,data=Pregunta3, family = binomial())
summary(ModeloBinomial)
anova(ModeloBinomial)
ModeloBinomial2<-glm(Narcotráfico~Terrorismo+Situación.Económica.2+Número.de.Terrenos,data=Pregunta3, family = binomial())
summary(ModeloBinomial2)
ModeloBinomial2<-glm(Narcotráfico~Terrorismo+Situación.Económica.2,data=Pregunta3, family = binomial())
summary(ModeloBinomial2)
anova(ModeloBinomial2)
res <- residuals(ModeloBinomial2, type = "deviance")
res <- residuals(ModeloBinomial2, type = "deviance")
plot(predict(ModeloBinomial2), res, xlab = "Fitted values",ylab = "Residuals", ylim = max(abs(res)) * c(-1,1))
abline(h = 0, lty = 2)
plot(predict(ModeloBinomial2), res, xlab = "Fitted values",ylab = "Residuals", main "Residuales del Modelo Binomial", ylim = max(abs(res)) * c(-1,1))
res <- residuals(ModeloBinomial2, type = "deviance")
plot(predict(ModeloBinomial2), res, xlab = "Fitted values",ylab = "Residuals", main "Residuales del Modelo Binomial", ylim = max(abs(res)) * c(-1,1))
abline(h = 0, lty = 2)
res <- residuals(ModeloBinomial2, type = "deviance")
plot(predict(ModeloBinomial2), res, xlab = "Fitted values",ylab = "Residuals", main = "Residuales del Modelo Binomial", ylim = max(abs(res)) * c(-1,1))
abline(h = 0, lty = 2)
res <- residuals(fit.lrm2, type = "deviance")
plot(predict(fit.lrm2), res, xlab = "Fitted values",ylab = "Residuals", main = "Residuales del Modelo Multinomial", ylim = max(abs(res)) * c(-1,1))
abline(h = 0, lty = 2)
res <- residuals(Modelo_log2, type = "deviance")
plot(predict(Modelo_log2), res, xlab = "Fitted values",ylab = "Residuals", main = "Residuales del Modelo Poisson", ylim = max(abs(res)) * c(-1,1))
abline(h = 0, lty = 2)
residualPlots(fit.lrm2)
library(car)
residualPlots(fit.lrm2)
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
library(rms)
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
attach(Pregunta2)
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
fit.lrm2
Modelo_log2<-glm(Nro.de.Terrenos~Extensión+Situación.Económica,family=poisson(log))
attach(Pregunta1)
Modelo_log2<-glm(Nro.de.Terrenos~Extensión+Situación.Económica,family=poisson(log))
summary(Modelo_log2)
anova(Modelo_log2)
attach(Pregunta3)
ModeloBinomial2<-glm(Narcotráfico~Terrorismo+Situación.Económica.2,data=Pregunta3, family = binomial())
Pregunta3<-Pregunta2
attach(Pregunta3)
ModeloBinomial2<-glm(Narcotráfico~Terrorismo+Situación.Económica.2,data=Pregunta3, family = binomial())
summary(ModeloBinomial2)
library(car)
residualPlots(Modelo_log2)
residualPlots(ModeloBinomial2)
residualPlots(fit.lrm2)
residualPlots(fit.lrm2,T)
marginalModelPlots(Modelo_log2)
marginalModelPlots(ModeloBinomial2)
marginalModelPlots(Modelo_log2)
marginalModelPlots(fit.lrm2)
residualPlots(fit.lrm2,fitted=TRUE)
residualPlots(fit.lrm2,~1,fitted=TRUE)
residualPlots(Modelo_log2,~1,fitted=TRUE)
residualPlots(Modelo_Binomial2,~1,fitted=TRUE)
residualPlots(ModeloBinomial2,~1,fitted=TRUE)
library(Rcmdr)
Modelo_log2<-glm(Nro.de.Terrenos~Extensión+Situación.Económica,family=poisson(log))
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
avPlots(Modelo_log2, id.method="mahal", id.n=2)
avPlots(fit.lrm2, id.method="mahal", id.n=2)
fit.lrm2<-lrm(Situación.Económica.2~Narcotráfico+Actos.de.Violencia+Extensión.Total)
avPlots(fit.lrm2, id.method="mahal", id.n=2)
influencePlot(ModeloBinomial2, id.method="noteworthy", id.n=2)
influencePlot(Modelo_log2, id.method="noteworthy", id.n=2)
library(colorspace, pos=27)
library(effects, pos=27)
plot(allEffects(ModeloBinomial2))
plot(allEffects(Modelo_log2))
library(Rcmdr)
library(rattle)
rattle()
install.packages("KernSmooth")
library(KernSmooth)
library(Rcmder)
dmultinom(x=c(6,3,2,1), size=12, prob=c(0.80,0.12,0.05,0.03))
L<-function(pi.hat,y,n){
(pi.hat^y)*(1-pi.hat)^(n-y)}
plot(pi.hat,L(pi.hat,y=50,n=250,type="1",xlab="",ylab"")
pi.hat<-seq(from=0,to=1,by=0.01)
plot(pi.hat,L(pi.hat,y=50,n=250,type="1",xlab="",ylab"")
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab"")
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab="")
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab=""))
abline(
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab=""))
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab="")))
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab="")))
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab=""))
0.2-0.25/(sqrt(0.25*0.75/250))
0.2-0.25/(sqrt((0.25*0.75/250)))
(0.2-0.25)/(sqrt(0.25*0.75/250))
L<-function(pi.hat,y,n){
(pi.hat^y)*(1-pi.hat)^(n-y)}
pi.hat<-seq(from=0,to=1,by=0.01)
plot(pi.hat,L(pi.hat,y=50,n=250,type="l",xlab="",ylab=""))
plot(pi.hat,L(pi.hat,y=50,n=250),type="l",xlab="",ylab=""))
plot(pi.hat,L(pi.hat,y=50,n=250),type="l",xlab="",ylab="")
q()
q()
dpois(x = 20, lambda = 16)
PrA<-dpois(x = 20, lambda = 16)
PrA<-dpois(x = 20, lambda = 16)
PrB<-dpois(x = 20, lambda = 18)
PrC<-dpois(x = 20, lambda = 20)
PrD<-dpois(x = 20, lambda = 22)
PrA
PrB
PrC
PrD
50/250
Zw <- (pi.hat - 0.30)/sqrt(pi.hat*(1 - pi.hat)/150)
pi.hat <- 62/150
Zw <- (pi.hat - 0.30)/sqrt(pi.hat*(1 - pi.hat)/150)
Zw
pvalue <- pnorm(Zw)
pvalue
?pnorm
mu <- 62/150
Zw <- (mu - 0.3)/sqrt(mu/15)
Zw
pvalue <- pnorm(Zw)
pvalue
prop.test(x = 50, n = 250, p = 0.25, alternative = "less", correct = F)
prop.test(x = 62, n = 150, p = 62/150, alternative = "less", correct = F)
pvalue <- pnorm(Zw,alternative="less")
X2RV <- 2*(log(pi.hat/(62/150)) + (150 - 62)*log((1 - pi.hat)/(1 - (62/150))))
X2RV
RV <- function(pi.0, y, n, alpha) {
2*(y*log(pi.hat/pi.0) + (n - y)*log((1 - pi.hat)/(1 - pi.0)) - qchisq(1 - alpha, df = 1))
}
pi.0 <- seq(from = 0, to = 1, by = 0.01)
plot(pi.0, RV(pi.0, y = 62, n = 150, alpha = 0.04), type = "l", xlab = "", ylab = "")
abline(h = 0, col = "red")
RV <- function(pi.0, y, n, alpha) {
2*(y*log(pi.hat/pi.0) + (n - y)*log((1 - pi.hat)/(1 - pi.0)) - qchisq(1 - alpha, df = 1))
}
pi.0 <- seq(from = 0, to = 1, by = 0.01)
plot(pi.0, RV(pi.0, y = 62, n = 150, alpha = 0.04), type = "l", xlab = "", ylab = "")
abline(h = 0, col = "red")
uniroot(f = RV, interval = c(0.20, 0.60), n = 150, y = 62, alpha = 0.04)
uniroot(f = RV, interval = c(0.20, 0.40), n = 150, y = 62, alpha = 0.04)
uniroot(f = RV, interval = c(0.50, 0.60), n = 150, y = 62, alpha = 0.04)
plot(pi.0, RV(pi.0, y = 62, n = 150, alpha = 0.04), type = "l", xlab = "", ylab = "")
abline(h = 0, col = "red")
mu <- 4/50
Zs <- (mu - 0.5)/sqrt(0.5/50)
Zs
pvalue1 <- pnorm(Zs)
pvalue1
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
library(Rcmdr)
mu <- 2/50
Zs <- (mu - 0.5)/sqrt(0.5/50)
Zs
pvalue1 <- pnorm(Zs)
pvalue1
2/50
X2RV<--2*((-50*0.8)+(2*log(0.8))+(100*0.4)-(2*log(0.04)))
X2RV
pvalue <- 1 - pchisq(X2RV, df = 1)
pvalue
2/50
2/50
mu<-0.04
n<-50
alfa<-0.08
error<-pchisq(1,1-alfa)*sqrt(mu/n)
Rvsup<-mu+error
Rvinf<-mu-error
Rvsup
Rvinf
n <- c(25,60,175,120,20)
prob <- c(0.10, 0.20, 0.30, 0.25, 0.15)
chisq.test(x = n, p = prob)
prop.hip <- n/sum(n)
G2 <- 2*sum(n*log(prop.hip/prob))
G2
pvalue <- 1 - pchisq(G2, df = 4)
pvalue
0.8*0.8
0.2*0.2
0.64/0.04
16/17
72*50
100*18
3600/1800
189+10845
72+18
prop2 <- 100/250
r <- prop1/prop2
prop1 <- 72/90
prop2 <- 100/250
r <- prop1/prop2
r
sigma <- sqrt(((1 - prop1)/72) + ((1 - prop2)/100))
sigma
log(r) + c(-1, 1)*qnorm(0.97)*sigma
exp(log(r) + c(-1, 1)*qnorm(0.97)*sigma)
odds1 <- prop1/(1 - prop1)
odds2 <- prop2/(1 - prop2)
theta <- odds1/odds2
theta
sigma <- sqrt((1/72) + (1/100) + (1/18) + (1/150))
sigma
log(theta) + c(-1, 1)*qnorm(0.97)*sigma
exp(log(theta) + c(-1, 1)*qnorm(0.97)*sigma)
Grupo Etario <- c("Jóvenes", "Adultos", "Mayores")
Película <- c("Acción","Comedia", "Terror", "Romance")
Tabla <- expand.grid(Grupo Etario = Grupo Etario, Película = Película)
data <- c(85, 103, 105, 76, 71, 91, 102, 79, 94,74,60,60)
Tabla <- cbind(Tabla, Frecuencia = data)
Tabla <- xtabs(Frecuencia ~ Película + Grupo Etario, Tabla)
Tabla
Grupo Etario <- c("Jóvenes", "Adultos", "Mayores")
Grupo<- c("Jóvenes", "Adultos", "Mayores")
Pelicula <- c("Acción","Comedia", "Terror", "Romance")
Tabla <- expand.grid(Grupo Etario=Grupo, Película = Pelicula)
Tabla <- expand.grid(Grupo=Grupo, Película = Pelicula)
Tabla <- expand.grid(Grupo_Etario=Grupo, Película = Pelicula)
data <- c(85, 103, 105, 76, 71, 91, 102, 79, 94,74,60,60)
Tabla <- cbind(Tabla, Frecuencia = data)
Tabla <- xtabs(Frecuencia ~ Película + Grupo_Etario, Tabla)
Tabla
library(vcd)
install.packages("vcd")
library(vcd)
install.packages("grid")
install.packages("grid")
library(vcd)
data<-read.delim("clipboard",T)
str(data)
install.packages("coefficientalpha")
Variables.Externas<-read.delim("clipboard",T)
str(Variables.Externas)
Intención.Uso<-read.delim("clipboard",T)
str(Intención.Uso)
Actitud.Uso<-read.delim("clipboard",T)
str(Actitud.Uso)
Facilidad.Uso.Percibida<-read.delim("clipboard",T)
str(Facilidad.Uso.Percibida)
Utilidad.Percibida<-read.delim("clipboard",T)
str(Utilidad.Percibida)
cronbachAlpha(Utilidad.Percibida)
library(cronbachAlpha)
install.packages("cronbachAlpha")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("cronbachAlpha")
install.packages("installr")
install.packages("installr")
updateR()
require(installr)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("cronbachAlpha")
install.packages("cronbachAlpha")
alpha(Utilidad.Percibida)
install.packages ("coefficientalpha")
library(coefficientalpha)
alpha(Utilidad.Percibida)
na.omit
na.omit(Utilidad.Percibidad)
View(Utilidad.Percibida)
na.omit(Utilidad.Percibidad[1:4])
na.omit(Utilidad.Percibida)
data.total<-read.delim("clipboard",T)
str(data.total)
omit.NA
na.omit(data.total)
str(data.total)
data.final<-na.omit(data.total)
str(data.final)
data.final<-na.exclude(data.total)
str(data.final)
data.final<-na.omit(data.total)
str(data.final)
str(data.total)
na.omit(data.total)
1840-168
1840-1680
str(data.total)
str(data.final)
1840-1628
alpha(data.final)
#Dimensión Utilidad Percibida
alpha(data.final[1:4,])
alpha(data.final[1:4])
#Dimensión Utilidad Percibida
alpha(data.final[1:4])
#Dimensión Facilidad de Uso Percibida
alpha(data.final[5:8])
#Dimensión Actitud hacia el uso
alpha(data.final[9:12])
#Dimensión Intención de Uso
alpha(data.final[13:16])
#Dimensión Variables externas
alpha(data.final[17:22])
library(lavaan)
modelo1<-Utilidad.Percibida=~ (data.final[17]) + (data.final[18]) + (data.final[19]) + (data.final[20]) + (data.final[21]) + (data.final[22])
modelo1<-'Utilidad.Percibida=~ (data.final[17]) + (data.final[18]) + (data.final[19]) + (data.final[20]) + (data.final[21]) + (data.final[22])'
modelo1<-'Utilidad.Percibida=~ (data.final[17]) + (data.final[18]) + (data.final[19]) + (data.final[20]) + (data.final[21]) + (data.final[22])
Facilidad.de.Uso=~(data.final[17]) + (data.final[18]) + (data.final[19]) + (data.final[20]) + (data.final[21]) + (data.final[22]
Actitud.Uso=~Utilidad.Percibida+Facilidad.Uso
Intención.Uso=~Actitud.Uso)'
fit <- sem(modelo1)
fit <- cfa(modelo1,data=data.final)
modelo1 <- 'visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
veloc =~ x7 + x8 + x9'
fit <- cfa(modelo1, data = data.final)
attach(data.final)
summary(data.final)
model1<-'
# latent variables
UP =~ S5_63 + S5_64 + S5_65 + S5_66
FUP =~ S5_67 + S5_68 + S5_69 + S5_70
AU =~ S5_71 + S5_72 + S5_73 + S5_74
IU =~ S5_75 + S5_76 + S5_77 + S5_78
# regressions
AU ~ UP+FUP
IU ~ AU
'
fit<-sem(model,data=data.final)
fit<-sem(model1,data=data.final)
summary(fit)
summary(model1)
summary(model1)
library(xlsx)
folder=file.path("~","Google Drive","Proyecto_Elecciones 2016")
filename="RESULTADOS_EG_2011.csv"
EG2011path=file.path(folder,filename)
# Getting what we need:
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
EG2011long=EG2011long[-c(5)]
names(EG2011long)
IDvars=names(EG2011long)[-c(5,6)]
EG2011wide <- reshape(EG2011long,
timevar = "NOM_ORGPOLITICA",
idvar = IDvars,
direction = "wide")
head(EG2011wide)
str(EG2011wide)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
library(xlsx)
install.packages("rJava")
folder=file.path("~","Google Drive","Proyecto_Elecciones 2016")
filename="RESULTADOS_EG_2011.csv"
EG2011path=file.path(folder,filename)
# Getting what we need:
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
folder=file.path("~","Google Drive","Proyecto_Elecciones 2016")
filename="RESULTADOS_EG_2011.csv"
EG2011path=file.path(folder,filename)
# Getting what we need:
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
setwd("C:/Users/HP/Google Drive/ElectoralResearch")
folder=file.path("~","Google Drive","Proyecto_Elecciones 2016")
filename="RESULTADOS_EG_2011.csv"
EG2011path=file.path(folder,filename)
# Getting what we need:
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
EG2011long <- read.csv(RESULTADOS_EG_2011, stringsAsFactors=F)[c(1:12)])
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
setwd("C:/ElectoralResearch")
EG2011long <- read.csv(EG2011path,
stringsAsFactors=F)[c(1:12)]
EG2011long <- read.csv(RESULTADOS_EG_2011, stringsAsFactors=F)[c(1:12)]
EG2011long <- read.csv(RESULTADOS_EG_2011.csv, stringsAsFactors=F)[c(1:12)]
data<-read.delim("clipboard",T)
EG2011long <- data
EG2011long=EG2011long[-c(5)]
names(EG2011long)
IDvars=names(EG2011long)[-c(5,6)]
EG2011wide <- reshape(EG2011long,
timevar = "NOM_ORGPOLITICA",
idvar = IDvars,
direction = "wide")
head(EG2011wide)
setwd("C:/Probando")
# Getting what we need:
EG2011long <- data
EG2011long=EG2011long[-c(5)]
names(EG2011long)
install.packages("knitr")
